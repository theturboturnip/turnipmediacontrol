package com.turboturnip.turnipmediacontrol;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v7.preference.DialogPreference;
import android.support.v7.preference.PreferenceDialogFragmentCompat;
import android.view.View;
import android.widget.CompoundButton;
import android.widget.Switch;

import com.skydoves.colorpickerpreference.ColorPickerView;

public class ColorPreferenceDialogFragmentCompat extends PreferenceDialogFragmentCompat {
    public static ColorPreferenceDialogFragmentCompat newInstance(String key) {
        final ColorPreferenceDialogFragmentCompat
                fragment = new ColorPreferenceDialogFragmentCompat();
        final Bundle b = new Bundle(1);
        b.putString(ARG_KEY, key);
        fragment.setArguments(b);

        return fragment;
    }

    private Switch autogeneratedSwitch;
    private ColorPickerView colorPickerView;
    private View blockerView;
    private View layoutView;

    @Override
    protected void onBindDialogView(View view) {
        super.onBindDialogView(view);

        layoutView = view.findViewById(R.id.edit);
        blockerView = view.findViewById(R.id.blocker);
        autogeneratedSwitch = view.findViewById(R.id.autogenerate_switch);
        colorPickerView = view.findViewById(R.id.colorPickerView);

        boolean isAutogenerated;
        int currentColor;

        DialogPreference preference = getPreference();
        if (preference instanceof ColorPreference) {
            boolean isOptional = ((ColorPreference)preference).getOptional();
            Integer value = ((ColorPreference)preference).getValue();
            if (value == null) {
                isAutogenerated = true;
            } else {
                isAutogenerated = false;
                currentColor = value;
                colorPickerView.setSavedColor(currentColor);
            }

            if (isOptional) {
                autogeneratedSwitch.setVisibility(View.VISIBLE);
                autogeneratedSwitch.setChecked(isAutogenerated);
                autogeneratedSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        updateAutogenerated(isChecked);
                    }
                });
            } else {
                autogeneratedSwitch.setVisibility(View.GONE);
                updateAutogenerated(false);
            }

        } else {
            throw new UnsupportedOperationException("Tried to use ColorPreferenceDialogFragmentCompat without a ColorPreference");
        }
    }

    private void updateAutogenerated(boolean autogenerated){
        if (blockerView != null) {
            blockerView.setVisibility(autogenerated ? View.VISIBLE : View.GONE);
            blockerView.setClickable(autogenerated);
        }
    }

    @Override
    public void onDialogClosed(boolean positiveResult) {
        if (!positiveResult) return;
        ColorPreference preference = ((ColorPreference)getPreference());
        if (autogeneratedSwitch.isChecked())
            preference.setValue();
        else
            preference.setValue(colorPickerView.getSavedColor(Color.rgb(255, 255, 0)));
    }
}
